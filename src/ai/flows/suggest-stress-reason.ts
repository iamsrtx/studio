
// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A Genkit flow for suggesting reasons to mark a facility as stressed.
 *
 * - suggestStressReason - A function that suggests a stress reason for a given facility function.
 * - SuggestStressReasonInput - The input type for the suggestStressReason function.
 * - SuggestStressReasonOutput - The return type for the suggestStressReason function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import type { FacilityFunction } from '@/lib/types'; // Assuming FacilityFunction is defined here
import { FACILITY_FUNCTIONS } from '@/lib/constants';


const SuggestStressReasonInputSchema = z.object({
  facilityFunction: z // Changed from facilityType
    .enum(FACILITY_FUNCTIONS as [FacilityFunction, ...FacilityFunction[]]) // Use FACILITY_FUNCTIONS
    .describe('The operating function of the facility.'),
});
export type SuggestStressReasonInput = z.infer<typeof SuggestStressReasonInputSchema>;

const SuggestStressReasonOutputSchema = z.object({
  reason: z.string().describe('A suggested reason for marking the facility as stressed.'),
});
export type SuggestStressReasonOutput = z.infer<typeof SuggestStressReasonOutputSchema>;

export async function suggestStressReason(input: SuggestStressReasonInput): Promise<SuggestStressReasonOutput> {
  return suggestStressReasonFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestStressReasonPrompt',
  input: {schema: SuggestStressReasonInputSchema},
  output: {schema: SuggestStressReasonOutputSchema},
  prompt: `You are an operations expert in charge of logistics. You are assisting a facility head who wants to mark a facility as stressed. Based on the facility's operating function, suggest a reason for marking the facility as stressed.

Facility Operating Function: {{{facilityFunction}}}

Suggest Reason:`, // Updated from facilityType
});

const suggestStressReasonFlow = ai.defineFlow(
  {
    name: 'suggestStressReasonFlow',
    inputSchema: SuggestStressReasonInputSchema,
    outputSchema: SuggestStressReasonOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
